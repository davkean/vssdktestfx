parameters:
- name: EnableAPIScan
  type: boolean

steps:
- task: MicroBuildCodesignVerify@3
  displayName: Verify Signed Files
  inputs:
    TargetFolders: |
      $(Build.SourcesDirectory)/bin/Packages/$(BuildConfiguration)/NuGet

- task: MicroBuildCleanup@1
  condition: succeededOrFailed()
  displayName: MicroBuild Cleanup

- task: ManifestGeneratorTask@0
  displayName: Software Bill of Materials generation
  inputs:
    BuildDropPath: $(System.DefaultWorkingDirectory)/bin/Microsoft.VisualStudio.Sdk.TestFramework/$(BuildConfiguration)
    BuildComponentPath: $(System.DefaultWorkingDirectory)/obj/src/Microsoft.VisualStudio.Sdk.TestFramework

- powershell: Copy-Item -Recurse -Verbose "$(System.DefaultWorkingDirectory)/bin/Microsoft.VisualStudio.Sdk.TestFramework/$(BuildConfiguration)/_manifest" "$(System.DefaultWorkingDirectory)/bin/Packages/$(BuildConfiguration)/NuGet"
  displayName: Publish Software Bill of Materials

- task: Ref12Analyze@0
  displayName: Ref12 (Codex) Analyze
  inputs:
    codexoutputroot: $(Build.ArtifactStagingDirectory)\Codex
    workflowArguments: |
      /sourcesDirectory:$(Build.SourcesDirectory)
      /codexRepoUrl:$(Build.Repository.Uri)
      /repoName:$(Build.Repository.Name)
      /additionalCodexArguments:-bld
      /additionalCodexArguments:$(Build.ArtifactStagingDirectory)/build_logs
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'), ne(variables['Build.Reason'], 'PullRequest'))
  continueOnError: true

- template: secure-development-tools.yml
  parameters:
    EnableAPIScan: ${{ parameters.EnableAPIScan }}
