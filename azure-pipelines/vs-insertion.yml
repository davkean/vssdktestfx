trigger: none # We only want to trigger manually or based on resources
pr: none

resources:
  pipelines:
  - pipeline: CI
    source: VSSDKTestFx
    tags:
    - Real signed
    trigger:
      tags:
      - Real signed
      - auto-insertion

stages:
- stage: VS
  displayName: VS insertion
  jobs:
  - deployment: insertion
    pool: VSEngSS-MicroBuild2022-1ES
    environment: No-Approval
    strategy:
      runOnce:
        deploy:
          steps:
          - powershell: |
              Write-Host "##vso[build.updatebuildnumber]$(resources.pipeline.CI.runName)"
            displayName: Set pipeline name
          - template: release-deployment-prep.yml
          - download: CI
            artifact: VSInsertion-Windows
            displayName: Download VSInsertion-Windows artifact
          - task: NuGetCommand@2
            displayName: Push CoreXT packages to VS feed
            inputs:
              command: push
              packagesToPush: $(Pipeline.Workspace)/CI/VSInsertion-windows/*.nupkg
              publishVstsFeed: 97a41293-2972-4f48-8c0e-05493ae82010
              allowPackageConflicts: true
          - task: MicroBuildInsertVsPayload@4
            displayName: Insert VS Payload
            inputs:
              TeamName: $(TeamName)
              TeamEmail: $(TeamEmail)
              InsertionPayloadName: $(Build.Repository.Name) $(Build.BuildNumber)
              InsertionBuildPolicy: Request Perf DDRITs
              AutoCompletePR: true
              AutoCompleteMergeStrategy: Squash
          - task: MicroBuildCleanup@1
            displayName: Send Telemetry
          - powershell: |
              $contentType = 'application/json';
              $headers = @{ Authorization = 'Bearer $(System.AccessToken)' };
              $rawRequest = @{ daysValid = 365 * 2; definitionId = $(resources.pipeline.CI.pipelineID); ownerId = 'User:$(Build.RequestedForId)'; protectPipeline = $false; runId = $(resources.pipeline.CI.runId) };
              $request = ConvertTo-Json @($rawRequest);
              Write-Host $request
              $uri = "$(System.CollectionUri)$(System.TeamProject)/_apis/build/retention/leases?api-version=6.0-preview.1";
              Invoke-RestMethod -uri $uri -method POST -Headers $headers -ContentType $contentType -Body $request;
            displayName: Retain inserted builds
