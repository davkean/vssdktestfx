parameters:
- name: windowsPool
  type: object
  default:
    vmImage: windows-2022
- name: RunTests
  type: boolean
  default: true
- name: EnableCompliance
  type: boolean
  default: false
- name: EnableAPIScan
  type: boolean
  default: false

jobs:
- job: Windows
  pool: ${{ parameters.windowsPool }}
  timeoutInMinutes: 180 # Give plenty of time due to real signing
  variables:
  - ${{ if eq(variables['system.collectionId'], '011b8bdf-6d56-4f87-be0d-0092136884d9') }}:
    # https://dev.azure.com/devdiv/DevDiv/_wiki/wikis/DevDiv.wiki/25351/APIScan-step-by-step-guide-to-setting-up-a-Pipeline
    - group: VSCloudServices-APIScan # Expected to provide ApiScanClientId, ApiScanSecret, ApiScanTenant
  steps:
  - checkout: self
    fetchDepth: 0 # avoid shallow clone so nbgv can do its work.
    clean: true

  - ${{ if eq(variables['Build.Reason'], 'Schedule') }}:
    - template: schedule-only-steps.yml

  - template: install-dependencies.yml

  - script: dotnet tool run nbgv cloud -ca
    displayName: âš™ Set build number

  - ${{ if eq(variables['system.collectionId'], '011b8bdf-6d56-4f87-be0d-0092136884d9') }}:
    - template: microbuild.before.yml

  - template: dotnet.yml
    parameters:
      RunTests: ${{ parameters.RunTests }}

  - ${{ if eq(variables['system.collectionId'], '011b8bdf-6d56-4f87-be0d-0092136884d9') }}:
    - template: microbuild.after.yml
      parameters:
        EnableCompliance: ${{ parameters.EnableCompliance }}
        EnableAPIScan: ${{ parameters.EnableAPIScan }}

  - template: publish-symbols.yml
  - ${{ if parameters.RunTests }}:
    - template: publish-codecoverage.yml
